# prefix remap
unbind C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix

# 0 is too far from ` ;)
set -g base-index 1

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

set-option -ga terminal-overrides ",xterm-256color:Tc"
set -g default-command $SHELL
set -g default-terminal $TERM
set -g status-keys vi
set -g history-limit 10000

setw -g mode-keys vi
set -g mouse on
setw -g monitor-activity on
bind-key v split-window -h -c '#{pane_current_path}'
bind-key h split-window -v -c '#{pane_current_path}' bash
bind-key c new-window -c '#{pane_current_path}' bash

bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
bind r source-file ~/.tmux.conf

# THEME
source-file ${HOME}/.tmux-themepack/powerline/block/cyan.tmuxtheme
set -g status-interval 1
set -g status-left-length 30
set -g status-left '#{pane_current_path}'

# smart pane switching with awareness of vim splits
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R
#bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
#bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
#bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
#bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
set -g status 2
#set -g focus-events on

if "test -f ~/.tmux/tmux_carbonfox.tmux" \
    "source ~/.tmux/tmux_carbonfox.tmux" 
