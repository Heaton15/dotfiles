*myhelp.txt*   easily interact with tmux

                                  Vimux
                   effortless vim and tmux interaction

==============================================================================
CONTENTS                                                        *myhelp-contents*

    1. About............................ |VimuxAbout|
    2. Usage ........................... |VimuxUsage|
      2.1 .............................. |VimuxPromptCommand|
      2.2 .............................. |VimuxRunLastCommand|
      2.3 .............................. |VimuxInspectRunner|
      2.4 .............................. |VimuxCloseRunner|
      2.5 .............................. |VimuxInterruptRunner|
      2.6 .............................. |VimuxClearRunnerHistory|
      2.7 .............................. |VimuxZoomRunner|
      2.8 .............................. |VimuxRunCommandInDir|
    3. Misc ............................ |VimuxMisc|
      3.1 Example Keybinding............ |VimuxExampleKeybinding|
      3.2 Tslime Replacement............ |VimuxTslimeReplacement|
    4. Configuration ................... |VimuxConfiguration|


==============================================================================
ABOUT (1)                                                           *myhelpAbout*

Vimux -- Easily interact with tmux from vim.

What inspired me to write vimux was tslime.vim [1], a plugin that lets you
send input to tmux. While tslime.vim works well, I felt it wasn't optimized
for my primary use case which was having a smaller tmux pane that I would use
to run tests or play with a REPL.

My goal with vimux is to make interacting with tmux from vim effortless. By
default when you call `VimuxRunCommand` vimux will create a 20% tall
horizontal pane under your current tmux pane and execute a command in it
without losing focus of vim. Once that pane exists whenever you call
`VimuxRunCommand` again the command will be executed in that pane. As I was
using vimux myself I wanted to rerun commands over and over. An example of
this was running the current file through rspec. Rather than typing that over
and over I wrote `VimuxRunLastCommand` that will execute the last command
you called with `VimuxRunCommand`.

Other auxiliary functions and the ones I talked about above can be found
bellow with a full description and example key binds for your vimrc.

[1] https://github.com/kikijump/tslime.vim


==============================================================================
